/* automatically generated by JSCoverage - do not edit */
try {
  if (typeof top === 'object' && top !== null && typeof top.opener === 'object' && top.opener !== null) {
    // this is a browser window that was opened from another window

    if (! top.opener._$jscoverage) {
      top.opener._$jscoverage = {};
    }
  }
}
catch (e) {}

try {
  if (typeof top === 'object' && top !== null) {
    // this is a browser window

    try {
      if (typeof top.opener === 'object' && top.opener !== null && top.opener._$jscoverage) {
        top._$jscoverage = top.opener._$jscoverage;
      }
    }
    catch (e) {}

    if (! top._$jscoverage) {
      top._$jscoverage = {};
    }
  }
}
catch (e) {}

try {
  if (typeof top === 'object' && top !== null && top._$jscoverage) {
    _$jscoverage = top._$jscoverage;
  }
}
catch (e) {}
if (typeof _$jscoverage !== 'object') {
  _$jscoverage = {};
}
if (! _$jscoverage['presets/divx.js']) {
  _$jscoverage['presets/divx.js'] = [];
  _$jscoverage['presets/divx.js'][1] = 0;
  _$jscoverage['presets/divx.js'][2] = 0;
  _$jscoverage['presets/divx.js'][11] = 0;
}
_$jscoverage['presets/divx.js'].source = ["exports.load = function(ffmpeg) {","  ffmpeg","    .toFormat('avi')","    .withVideoBitrate('1024k')","    .withVideoCodec('mpeg4')","    .withSize('720x?')","    .withAudioBitrate('128k')","    .withAudioChannels(2)","    .withAudioCodec('libmp3lame')","    .addOptions([ '-vtag DIVX' ]);","  return ffmpeg;","};"];
_$jscoverage['presets/divx.js'][1]++;
exports.load = (function (ffmpeg) {
  _$jscoverage['presets/divx.js'][2]++;
  ffmpeg.toFormat("avi").withVideoBitrate("1024k").withVideoCodec("mpeg4").withSize("720x?").withAudioBitrate("128k").withAudioChannels(2).withAudioCodec("libmp3lame").addOptions(["-vtag DIVX"]);
  _$jscoverage['presets/divx.js'][11]++;
  return ffmpeg;
});
